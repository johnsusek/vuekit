import AppKit
import JavaScriptCore

let subclassed = [
  "AVPlayerView",
  "IKCameraDeviceView",
  "IKDeviceBrowserView",
  "IKFilterBrowserView",
  "IKFilterUIView",
  "IKImageView",
  "IKScannerDeviceView",
  "NSBox",
  "NSBrowser",
  "NSButton",
  "NSClipView",
  "NSCollectionView",
  "NSColorWell",
  "NSComboBox",
  "NSDatePicker",
  "NSGridView",
  "NSImageView",
  "NSLevelIndicator",
  "NSMatrix",
  "NSOutlineView",
  "NSPathControl",
  "NSPopUpButton",
  "NSPredicateEditor",
  "NSProgressIndicator",
  "NSRuleEditor",
  "NSRulerView",
  "NSScroller",
  "NSScrollView",
  "NSScrubber",
  "NSScrubberArrangedView",
  "NSScrubberImageItemView",
  "NSScrubberTextItemView",
  "NSSearchField",
  "NSSecureTextField",
  "NSSegmentedControl",
  "NSSlider",
  "NSSplitView",
  "NSStackView",
  "NSStatusBarButton",
  "NSStepper",
  "NSSwitch",
  "NSTableCellView",
  "NSTableHeaderView",
  "NSTableRowView",
  "NSTableView",
  "NSTabView",
  "NSText",
  "NSTextField",
  "NSTextView",
  "NSTokenField",
  "NSVisualEffectView",
  "QLPreviewView",
  "QuartzFilterView"
]

// TODO: Build this list by walking the filesystem
let allClasses = [
  "AVAsset",
  "AVAssetCache",
  "AVAssetImageGenerator",
  "AVAssetReader",
  "AVAssetReaderOutputMetadataAdaptor",
  "AVAssetResourceLoader",
  "AVAssetResourceLoadingRequest",
  "AVAssetResourceLoadingRequestor",
  "AVAssetResourceRenewalRequest",
  "AVAssetTrackGroup",
  "AVAssetTrackSegment",
  "AVAssetWriter",
  "AVAssetWriterInputMetadataAdaptor",
  "AVAssetWriterInputPassDescription",
  "AVAsynchronousCIImageFilteringRequest",
  "AVAudioBuffer",
  "AVAudioChannelLayout",
  "AVAudioCompressedBuffer",
  "AVAudioConnectionPoint",
  "AVAudioConverter",
  "AVAudioEnvironmentDistanceAttenuationParameters",
  "AVAudioEnvironmentReverbParameters",
  "AVAudioFile",
  "AVAudioMix",
  "AVAudioMixingDestination",
  "AVAudioPlayer",
  "AVAudioRecorder",
  "AVAudioSequencer",
  "AVAudioTime",
  "AVAudioUnitComponent",
  "AVAudioUnitComponentManager",
  "AVAudioUnitEQFilterParameters",
  "AVCameraCalibrationData",
  "AVCaptureAudioChannel",
  "AVCaptureAudioDataOutput",
  "AVCaptureAudioPreviewOutput",
  "AVCaptureConnection",
  "AVCaptureDevice",
  "AVCaptureDeviceInput",
  "AVCaptureInput",
  "AVCaptureOutput",
  "AVCaptureScreenInput",
  "AVCaptureSession",
  "AVCaptureView",
  "AVComposition",
  "AVCompositionTrackSegment",
  "AVContentKeyRequest",
  "AVContentKeyResponse",
  "AVContentKeySession",
  "AVDateRangeMetadataGroup",
  "AVFragmentedAssetMinder",
  "AVFragmentedMovieMinder",
  "AVFrameRateRange",
  "AVMediaDataStorage",
  "AVMediaSelection",
  "AVMediaSelectionOption",
  "AVMetadataBodyObject",
  "AVMetadataCatBodyObject",
  "AVMetadataDogBodyObject",
  "AVMetadataFaceObject",
  "AVMetadataGroup",
  "AVMetadataHumanBodyObject",
  "AVMetadataItemFilter",
  "AVMetadataItemValueRequest",
  "AVMetadataObject",
  "AVMetadataSalientObject",
  "AVMIDIPlayer",
  "AVMusicTrack",
  "AVMutableAudioMix",
  "AVMutableComposition",
  "AVMutableDateRangeMetadataGroup",
  "AVMutableMediaSelection",
  "AVMutableVideoComposition",
  "AVMutableVideoCompositionInstruction",
  "AVMutableVideoCompositionLayerInstruction",
  "AVPersistableContentKeyRequest",
  "AVPictureInPictureController",
  "AVPlayer",
  "AVPlayerItemAccessLog",
  "AVPlayerItemErrorLog",
  "AVPlayerItemErrorLogEvent",
  "AVPlayerItemLegibleOutput",
  "AVPlayerItemMediaDataCollector",
  "AVPlayerItemMetadataCollector",
  "AVPlayerItemMetadataOutput",
  "AVPlayerItemOutput",
  "AVPlayerItemTrack",
  "AVPlayerLooper",
  "AVPlayerMediaSelectionCriteria",
  "AVPlayerView",
  "AVRouteDetector",
  "AVSampleBufferAudioRenderer",
  "AVSampleBufferRequest",
  "AVSpeechSynthesisVoice",
  "AVSpeechSynthesizer",
  "AVSpeechUtterance",
  "AVTextStyleRule",
  "AVURLAsset",
  "AVVideoComposition",
  "AVVideoCompositionCoreAnimationTool",
  "AVVideoCompositionInstruction",
  "AVVideoCompositionLayerInstruction",
  "AVVideoCompositionRenderHint",
  // "BlockOperation",
  "CAAnimation",
  "CAAnimationGroup",
  "CABasicAnimation",
  // "CachedURLResponse",
  "CAConstraint",
  "CAConstraintLayoutManager",
  "CAEDRMetadata",
  "CAEmitterCell",
  "CAEmitterLayer",
  "CAGradientLayer",
  "CAKeyframeAnimation",
  "CALayer",
  "CAMetalLayer",
  "CAPropertyAnimation",
  "CARemoteLayerClient",
  "CARemoteLayerServer",
  "CARenderer",
  "CAReplicatorLayer",
  "CAScrollLayer",
  "CAShapeLayer",
  "CASpringAnimation",
  "CATextLayer",
  "CATiledLayer",
  "CATransaction",
  "CATransformLayer",
  "CATransition",
  "CAValueFunction",
  "CIAztecCodeDescriptor",
  "CIBarcodeDescriptor",
  "CIDetector",
  "CIFaceFeature",
  "CIFeature",
  "CIFilterGenerator",
  "CIFilterShape",
  "CIImageAccumulator",
  "CIImageProcessorKernel",
  "CIKernel",
  "CIPDF417CodeDescriptor",
  "CIPlugIn",
  "CIQRCodeFeature",
  "CIRectangleFeature",
  "CIRenderDestination",
  "CIRenderInfo",
  "CIRenderTask",
  "CISampler",
  "CITextFeature",
  "CIWarpKernel",
  // "Dimension",
  // "HTTPURLResponse",
  "IKCameraDeviceView",
  "IKDeviceBrowserView",
  "IKFilterBrowserView",
  "IKFilterUIView",
  "IKImageBrowserCell",
  "IKImageEditPanel",
  "IKPictureTaker",
  "IKSaveOptions",
  "IKScannerDeviceView",
  "IKSlideshow",
  // "JSONSerialization",
  "NSAccessibilityCustomAction",
  "NSAccessibilityCustomRotor",
  "NSActionCell",
  "NSAffineTransform",
  "NSAlert",
  "NSAlignmentFeedbackFilter",
  "NSAnimation",
  "NSAnimationContext",
  "NSAppearance",
  "NSAppleEventManager",
  "NSAppleScript",
  "NSApplication",
  "NSAssertionHandler",
  "NSATSTypesetter",
  "NSAttributedString",
  "NSBackgroundActivityScheduler",
  "NSBezierPath",
  "NSBindingSelectionMarker",
  "NSBox",
  "NSBrowserCell",
  "NSButton",
  "NSButtonCell",
  "NSButtonTouchBarItem",
  "NSCell",
  "NSCharacterSet",
  "NSClassDescription",
  "NSClickGestureRecognizer",
  "NSClipView",
  "NSCloneCommand",
  "NSCloseCommand",
  "NSCollectionLayoutAnchor",
  "NSCollectionLayoutBoundarySupplementaryItem",
  "NSCollectionLayoutDecorationItem",
  "NSCollectionLayoutDimension",
  "NSCollectionLayoutEdgeSpacing",
  "NSCollectionLayoutGroup",
  "NSCollectionLayoutGroupCustomItem",
  "NSCollectionLayoutItem",
  "NSCollectionLayoutSection",
  "NSCollectionLayoutSize",
  "NSCollectionLayoutSpacing",
  "NSCollectionLayoutSupplementaryItem",
  "NSCollectionView",
  "NSCollectionViewCompositionalLayout",
  "NSCollectionViewCompositionalLayoutConfiguration",
  "NSCollectionViewFlowLayout",
  "NSCollectionViewGridLayout",
  "NSCollectionViewItem",
  "NSCollectionViewLayout",
  "NSCollectionViewLayoutAttributes",
  "NSCollectionViewTransitionLayout",
  "NSCollectionViewUpdateItem",
  "NSColorList",
  "NSColorPanel",
  "NSColorPicker",
  "NSColorPickerTouchBarItem",
  "NSColorSampler",
  "NSColorWell",
  "NSComboBox",
  "NSComboBoxCell",
  "NSComparisonPredicate",
  "NSCompoundPredicate",
  "NSCondition",
  "NSConditionLock",
  "NSControl",
  "NSController",
  "NSCountCommand",
  "NSCreateCommand",
  "NSCursor",
  "NSCustomTouchBarItem",
  "NSData",
  "NSDataAsset",
  "NSDataDetector",
  "NSDate",
  "NSDateComponents",
  "NSDatePicker",
  "NSDatePickerCell",
  "NSDecimalNumberHandler",
  "NSDeleteCommand",
  "NSDictionaryControllerKeyValuePair",
  "NSDistributedLock",
  "NSDockTile",
  "NSDraggingImageComponent",
  "NSDraggingItem",
  "NSDraggingSession",
  "NSError",
  "NSEvent",
  "NSException",
  "NSExistsCommand",
  "NSExtensionContext",
  "NSExtensionItem",
  "NSFileAccessIntent",
  "NSFileCoordinator",
  "NSFilePromiseProvider",
  "NSFilePromiseReceiver",
  "NSFileProviderService",
  "NSFileSecurity",
  "NSFileVersion",
  "NSFontAssetRequest",
  "NSFontCollection",
  "NSFontDescriptor",
  "NSFontManager",
  "NSFontPanel",
  "NSFormCell",
  "NSGestureRecognizer",
  "NSGetCommand",
  "NSGlyphGenerator",
  "NSGlyphInfo",
  "NSGridCell",
  "NSGridColumn",
  "NSGridRow",
  "NSGridView",
  "NSGroupTouchBarItem",
  "NSHapticFeedbackManager",
  "NSHelpManager",
  "NSImage",
  "NSImageCell",
  "NSImageView",
  "NSIndexPath",
  "NSIndexSet",
  "NSIndexSpecifier",
  "NSItemProvider",
  "NSLayoutAnchor",
  "NSLayoutConstraint",
  "NSLayoutDimension",
  "NSLayoutGuide",
  "NSLayoutManager",
  "NSLayoutXAxisAnchor",
  "NSLayoutYAxisAnchor",
  "NSLevelIndicator",
  "NSLevelIndicatorCell",
  "NSLinguisticTagger",
  "NSLocale",
  "NSLock",
  "NSLogicalTest",
  "NSMagnificationGestureRecognizer",
  "NSMediaLibraryBrowserController",
  "NSMenu",
  "NSMenuItem",
  "NSMenuItemCell",
  "NSMenuToolbarItem",
  "NSMetadataItem",
  "NSMetadataQuery",
  "NSMetadataQueryAttributeValueTuple",
  "NSMetadataQueryResultGroup",
  "NSMiddleSpecifier",
  "NSMoveCommand",
  "NSMutableAttributedString",
  "NSMutableCharacterSet",
  "NSMutableData",
  "NSMutableFontCollection",
  "NSMutableIndexSet",
  "NSMutableParagraphStyle",
  "NSMutableURLRequest",
  "NSNameSpecifier",
  "NSNib",
  "NSNotification",
  "NSNull",
  "NSOpenGLView",
  "NSOpenPanel",
  "NSOrderedCollectionDifference",
  "NSOrthography",
  "NSOutlineView",
  "NSPageController",
  "NSPageLayout",
  "NSPanel",
  "NSPanGestureRecognizer",
  "NSParagraphStyle",
  "NSPasteboard",
  "NSPasteboardItem",
  "NSPathCell",
  "NSPathComponentCell",
  "NSPathControl",
  "NSPathControlItem",
  "NSPDFPanel",
  "NSPersonNameComponents",
  "NSPickerTouchBarItem",
  "NSPointerArray",
  "NSPointerFunctions",
  "NSPopover",
  "NSPopoverTouchBarItem",
  "NSPopUpButtonCell",
  "NSPositionalSpecifier",
  "NSPredicate",
  "NSPredicateEditor",
  "NSPredicateEditorRowTemplate",
  "NSPressGestureRecognizer",
  "NSPressureConfiguration",
  "NSPrinter",
  "NSPrintOperation",
  "NSPrintPanel",
  "NSProgressIndicator",
  "NSPropertySpecifier",
  "NSProxy",
  "NSPurgeableData",
  "NSQuitCommand",
  "NSRandomSpecifier",
  "NSRangeSpecifier",
  "NSRecursiveLock",
  "NSRegularExpression",
  "NSRelativeSpecifier",
  "NSResponder",
  "NSRotationGestureRecognizer",
  "NSRuleEditor",
  "NSRulerMarker",
  "NSRulerView",
  "NSRunningApplication",
  "NSSavePanel",
  "NSScreen",
  "NSScriptClassDescription",
  "NSScriptCoercionHandler",
  "NSScriptCommand",
  "NSScriptCommandDescription",
  "NSScriptExecutionContext",
  "NSScriptObjectSpecifier",
  "NSScriptSuiteRegistry",
  "NSScriptWhoseTest",
  "NSScroller",
  "NSScrollView",
  "NSScrubber",
  "NSScrubberArrangedView",
  "NSScrubberFlowLayout",
  "NSScrubberImageItemView",
  "NSScrubberItemView",
  "NSScrubberLayout",
  "NSScrubberLayoutAttributes",
  "NSScrubberProportionalLayout",
  "NSScrubberSelectionStyle",
  "NSScrubberSelectionView",
  "NSScrubberTextItemView",
  "NSSearchField",
  "NSSearchFieldCell",
  "NSSecureTextField",
  "NSSecureTextFieldCell",
  "NSSecureUnarchiveFromDataTransformer",
  "NSSegmentedCell",
  "NSSegmentedControl",
  "NSSetCommand",
  "NSShadow",
  "NSSharingService",
  "NSSharingServicePicker",
  "NSSharingServicePickerToolbarItem",
  "NSSharingServicePickerTouchBarItem",
  "NSSlider",
  "NSSliderAccessory",
  "NSSliderAccessoryBehavior",
  "NSSliderCell",
  "NSSliderTouchBarItem",
  "NSSortDescriptor",
  "NSSound",
  "NSSpecifierTest",
  "NSSpeechRecognizer",
  "NSSpeechSynthesizer",
  "NSSpellChecker",
  "NSSpellServer",
  "NSSplitView",
  "NSSplitViewController",
  "NSSplitViewItem",
  "NSStackView",
  "NSStatusBar",
  "NSStatusBarButton",
  "NSStatusItem",
  "NSStepper",
  "NSStepperCell",
  "NSStepperTouchBarItem",
  "NSStoryboard",
  "NSStoryboardSegue",
  "NSStringDrawingContext",
  "NSSwitch",
  "NSTableCellView",
  "NSTableColumn",
  "NSTableHeaderCell",
  "NSTableHeaderView",
  "NSTableRowView",
  "NSTableView",
  "NSTableViewRowAction",
  "NSTabView",
  "NSTabViewController",
  "NSTabViewItem",
  "NSText",
  "NSTextAlternatives",
  "NSTextAttachment",
  "NSTextAttachmentCell",
  "NSTextBlock",
  "NSTextCheckingController",
  "NSTextCheckingResult",
  "NSTextField",
  "NSTextFieldCell",
  "NSTextFinder",
  "NSTextInputContext",
  "NSTextList",
  "NSTextTab",
  "NSTextTable",
  "NSTextTableBlock",
  "NSTextView",
  "NSTitlebarAccessoryViewController",
  "NSTokenField",
  "NSTokenFieldCell",
  "NSToolbar",
  "NSToolbarItem",
  "NSToolbarItemGroup",
  "NSTouch",
  "NSTouchBar",
  "NSTouchBarItem",
  "NSTrackingArea",
  "NSTypesetter",
  "NSUniqueIDSpecifier",
  "NSURL",
  "NSURLComponents",
  "NSURLConnection",
  "NSURLDownload",
  "NSURLHandle",
  "NSURLQueryItem",
  "NSURLRequest",
  "NSUserActivity",
  "NSUserAppleScriptTask",
  "NSUserAutomatorTask",
  "NSUserDefaultsController",
  "NSUserInterfaceCompressionOptions",
  "NSUserNotification",
  "NSUserNotificationAction",
  "NSUserNotificationCenter",
  "NSUserScriptTask",
  "NSUserUnixTask",
  "NSUUID",
  "NSValue",
  "NSView",
  "NSViewAnimation",
  "NSViewController",
  "NSVisualEffectView",
  "NSWhoseSpecifier",
  "NSWindow",
  "NSWindowController",
  "NSWindowTab",
  "NSWindowTabGroup",
  "NSWorkspace",
  "NSXPCConnection",
  "NSXPCListener",
  "NSXPCListenerEndpoint",
  // "Operation",
  // "Pipe",
  // "Process",
  "QCComposition",
  "QCCompositionRepository",
  "QCPlugIn",
  "QLPreviewPanel",
  "QLPreviewView",
  "QuartzFilter",
  "QuartzFilterManager",
  "QuartzFilterView",
  // "Unit",
  // "UnitAcceleration",
  // "UnitAngle",
  // "UnitArea",
  // "UnitDispersion",
  // "UnitDuration",
  // "UnitElectricCharge",
  // "UnitElectricCurrent",
  // "UnitElectricPotentialDifference",
  // "UnitElectricResistance",
  // "UnitEnergy",
  // "UnitFrequency",
  // "UnitFuelEfficiency",
  // "UnitIlluminance",
  // "UnitLength",
  // "UnitPower",
  // "UnitPressure",
  // "UnitSpeed",
  // "UnitTemperature",
  // "UnitVolume",
  // "URLAuthenticationChallenge",
  // "URLProtocol",
  // "URLResponse",
  // "URLSession",
  // "URLSessionConfiguration",
  // "URLSessionDataTask",
  // "URLSessionDownloadTask",
  // "URLSessionStreamTask",
  // "URLSessionTask",
  // "URLSessionTaskMetrics",
  // "URLSessionTaskTransactionMetrics",
  // "URLSessionUploadTask",
  // "URLSessionWebSocketTask",
  // "ValueTransformer",
  // "XMLParser"
  "Alamofire"
]

// TODO: register global funcs/vars (not just classes )
// RegisterGlobals.register(context: context)

class Registration {
  let context: JSContext

  init(context: JSContext) {
    self.context = context
  }

  func classOrProtoFromString(_ name: String) -> Any? {
    let cls: AnyClass? = NSClassFromString(name)

    if cls != nil { return cls }

    let pro = NSProtocolFromString(name)

    if pro != nil {
      return pro
    }

    return nil
  }

  func registerClassOrProto(classOrProto: Any, bridgedName: String) {
    var out = "✔ Registered \(classOrProto) as "

    out += bridgedName

    context.setObject(
      classOrProto,
      forKeyedSubscript: bridgedName as (NSCopying & NSObjectProtocol)?)

    // print(out)
  }

  func registerClasses() {
    let fm = FileManager.default
    let path = Bundle.main.resourcePath!

    for className in allClasses {
      let classType = classOrProtoFromString(className)

      // We subclass views so that we can override draw() etc
      if subclassed.contains(className) {
        let subclassName = String(className.dropFirst(2))
        let subClassType = classOrProtoFromString("VueKit." + subclassName)
        if (subClassType != nil) {
          registerClassOrProto(classOrProto: subClassType!, bridgedName: subclassName)
        }
        else {
          print("[bridge] Could not register \(subclassName) because subClassType nil")
        }
      }

      if (classType != nil) {
        registerClassOrProto(classOrProto: classType!, bridgedName: className)
      }
      else {
        print("[bridge] Could not register \(className) because classType nil")
      }
    }

    let tenderClasses = [
      // This is a HostElement/HostNode in Vue parlance
      //
      // One of these is created for every vue vnode
      // (but this is not a vnode, this is vnode.el)
      // and is akin to an HTML element in the Vue DOM renderer
      //
      // A VueKitNode has a 1:1 correspondence to an NSView, but
      // doesn't always contain an NSView (e.g. for comment/text nodes)
      "VueKitNode": VueKitNode.self
    ]

    for (bridgedName, className) in tenderClasses {
      registerClassOrProto(classOrProto: className, bridgedName: bridgedName)
    }
  }

}
